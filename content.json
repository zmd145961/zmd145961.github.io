{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"day01","slug":"day01","date":"2019-07-15T05:21:09.000Z","updated":"2019-07-15T05:36:02.955Z","comments":true,"path":"2019/07/15/day01/","link":"","permalink":"http://yoursite.com/2019/07/15/day01/","excerpt":"","text":"1.搭建购物车服务1.1.创建module1.2.pom依赖12345678910111213141516171819202122232425262728293031323334&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;parent&gt; &lt;artifactId&gt;leyou&lt;/artifactId&gt; &lt;groupId&gt;com.leyou.parent&lt;/groupId&gt; &lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt; &lt;/parent&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.leyou.service&lt;/groupId&gt; &lt;artifactId&gt;ly-cart&lt;/artifactId&gt; &lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt; &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt; &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/project&gt; 1.3.配置文件123456789101112131415server: port: 8088spring: application: name: cart-service redis: host: 192.168.56.101eureka: client: service-url: defaultZone: http://127.0.0.1:10086/eureka registry-fetch-interval-seconds: 10 instance: lease-renewal-interval-in-seconds: 5 lease-expiration-duration-in-seconds: 15 1.4.启动类123456789@SpringBootApplication@EnableDiscoveryClient@EnableFeignClientspublic class LeyouCartApplication &#123; public static void main(String[] args) &#123; SpringApplication.run(LeyouCartApplication.class, args); &#125;&#125; 2.购物车功能分析2.1.需求需求描述： 用户可以在登录状态下将商品添加到购物车 放入数据库 mongodb 放入redis（采用） 用户可以在未登录状态下将商品添加到购物车 放入localstorage cookie webSQL 用户可以使用购物车一起结算下单 用户可以查询自己的购物车 用户可以在购物车中修改购买商品的数量。 用户可以在购物车中删除商品。 在购物车中展示商品优惠信息 提示购物车商品价格变化 2.2.流程图 这幅图主要描述了两个功能：新增商品到购物车、查询购物车。 新增商品： 判断是否登录 是：则添加商品到后台Redis中 否：则添加商品到本地的Localstorage 无论哪种新增，完成后都需要查询购物车列表： 判断是否登录 否：直接查询localstorage中数据并展示 是：已登录，则需要先看本地是否有数据， 有：需要提交到后台添加到redis，合并数据，而后查询 否：直接去后台查询redis，而后返回","categories":[],"tags":[]},{"title":"我的文章","slug":"我的文章","date":"2019-07-15T04:34:57.000Z","updated":"2019-07-15T04:38:19.595Z","comments":true,"path":"2019/07/15/我的文章/","link":"","permalink":"http://yoursite.com/2019/07/15/我的文章/","excerpt":"","text":"##你好 这是我的第一篇文章","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-07-15T04:25:38.489Z","updated":"2019-07-15T04:25:38.489Z","comments":true,"path":"2019/07/15/hello-world/","link":"","permalink":"http://yoursite.com/2019/07/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}